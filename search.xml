<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[centos6、centos7开机启动流程]]></title>
    <url>%2F2017%2F12%2F02%2Fkai%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E3%80%81%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[centos6、centos7开机启动流程 centos6 centos7 按下电源 按下电源 开机自检BIOS 开机自检BIOS MBR引导 MBR引导 GRUB菜单 GRUB菜单 加载内核kernel 加载内核kernel 运行INIT进程 运行systemd进程 读取/etc/inintab 选择启动级别/etc/systemd/system/default.target 读取/etc/rc.sysinit初始化系统 初始化脚本 运行/etc/rc数字.d的脚本/服务 并行启动服务 启动mingetty显示登录界面 启动mingetty centos6、centos7开机启动流程开机启动流程、用户管理一、 让一个程序开机启动有什么方法：1./etc/rc.local 开机启动脚本或命令，放入即可。2.通过chkconfig命令管理 你要启动的脚本/服务。（远控卡）二、二用户分类1.UID user id 身份证号码2.GID geoup id 用户组ID3.root 皇帝ID UID：04.虚拟用户：傀儡用户UID 1-499 （centos7 1-999）​ 用户的命令解释器：/sbin/nologin ​ 每个用户、服务运行的时候都需要一个用户 ​ 傀儡用户不需要登录系统 5.普通用户 UID 500+ （centos7 1000+）三.用户相关配置文件1./etc/passwd 用户信息12root: x: 0: 0: root: /root: /bin/bash用户名 密码 UID GID 用户的说明 家目录 命令解释器 2./etc/shadow 用户密码信息3./etc/geoup用户组信息4./etc/gshadow 用户组密码信息四.用户相关的目录/etc/skel 新用户的老家的模板（新用户家目录的样子） 存放新建用户的目录（创建新用户后会把这个目录下的文件拷贝到新用户的家目录下） 登录到普通用户下突然发现-bash-4.2$解决办法： 五.用户管理的命令1.用户相关命令：1.1.useradd：useradd 添加用户​ -u 指定UID​ -s 指定登录shell​ /bin/bash​ /bin/nologin​ -g 指定GID，用户组​ -M 不创建家目录 1.2.userdel 删除用户 （不要删除 要注释就OK）​ -r 删除家目录​ userdel oldboy 只删除用户 不删除家目录​ userdel -r oldboy 同家目录一起删除 （注：工作中再passwd中注释#用户就可以了，不要删除。） 1.3.usermod 修改用户信息​ -s 修改shell ​ -g 属于的家庭，用户组 （主要组） ​ -G属于多个家庭 （附加组） 2.批量创建用户及密码2.1创建十个用户 密码均为123456sed awk 2.2非交互式创建密码echo **|passwd –stdin 用户 2.3 生成随机数（随机密码）2.31 echo $((RANDOM))​ 随机生成0-32767数字，有重复的可能。可加指纹。echo $((RANDOM)) |md5sum ​ 取余 echo $((RANDOM%10)) 只选0-9 2.32 /dev/urandom ​ 可加指纹 md5sum 2.33 date​ date +%N 纳秒 按照纳秒在变化。可加指纹date +%N|md5sum 2.34uuidgen 随机的uuid 可以tr替换 2.4创建十个用户并且配十个随机密码创建八位随机密码 赋值给pass 12pass=`date +%N|md5sun|cut -c1-8`pass=$(date +%N|md5sum|cut -c1-8) 两种方法皆可 创建stu{1..10}用户-给每个用户八位不同随机密码-用户密码存入pass.txt中。 sed 1echo stu&#123;1..10&#125;|xargs -n1|sed -r &apos;s#(.*)#useradd \1;pass=$(date +%N|md5sum|cut -c1-8);echo $pass \1 &gt;&gt;pass.txt;echo $pass|passwd --stdin \1#g&apos;|bash awk 1echo stu&#123;1..10&#125;|xargs -n1|awk &apos;&#123;print &quot;useradd &quot; $0 &quot; ; pass=$(date +%N|md5sum|cut -c1-8)&quot;&quot; ;&quot; &quot;echo $pass &quot;$1&quot; &gt;&gt;pass.txt&quot; &quot; ;&quot; &quot;echo $pass|passwd --stdin &quot;$1&quot;&quot; &apos;&#125;|bash ![img](file:///D:\Documents\Tencent Files\1468870854\Image\C2C\42NE(G@38HQXVTJ(Q7T)31I.png) 2.5批量删除用户（有序） 六.修改hhd端口(禁止root用户远程登录 ) 进入vim /etc/ssh/sshd_config 默认22端口 #port 22 底下加一行 port 端口 修改完成以后重新加载或者重启sshd 分析日志 查看/var/log/secure 安全日志 failure或Failed七.给文件加指纹1. md5sum 1.txt &gt; police.md5​ 给1.txt生成一个指纹 并且把指纹放入police.md5中 2. md5sum -c police.md5​ 查看指纹是否有变化 ​ 有变化就修改过了 chown 修改文件或者目录所有者和术语的用户组。 12格式：chown lizhenya.lizhenya /tmp/1.txt 属主 属组 文件 -R 递归 chown -R lizhenya * w的使用方法 sudosudo -l 查看当前用户是否有sudo visudo ===== vim /etc/sudoers lizhenya ALL=(ALL) /usr/bin/ls授权的命令 必须跟全路径 sudo -k 清空缓存密码NOPASSWD 不需要密码 lizhenya ALL=(ALL) NOPASSWD:ALL 八.文件权限1.权限体系1234567891011121.文件对应权限r===read 可读w===wirte 可写x===execute 可执行如何查看当前用户对某个文件或目录有什么权限ll /etc/hosts-rw-r--r-- 等信息2.权限的计算r===4w===2x===1-===0 2.修改文件权限 chmod12345678910111213141516171819属主 属组 其他用户user group othersu g o方法一:例:属主去掉写入权限使用chmod u-w 1.sh例:属主同时给rwx权限 = 先清除在赋值权限chmod u=rwx 1.sh例:属主 属组 其他用户同时增加x执行权限chmod ugo+x 1.sh例:同时删除x执行权限 a=ugo (a=all)chmod a-x 1.sh例:使用a对所有用户增加x执行权限chmod a+x 1.sh方法二:使用数字进行权限修改(常用)例: 文件修改为644权限 rw-r--r—chmod 644 1.sh例：文件修改为755权限 rwx-r-xr-xchmod 755 1.sh 3.文件权限总结1231. r 显示文件内容2. w 是否能修改文件的内容 需要有r权限配合 只有w的时候 保存退出会导致文件内容清空3. x是否有执行权限 需要有r可读权限配置 4.目录权限总结12345671. r是否能查看目录的内容ls2. w是否能在目录中创建 删除 重命名 文件权限3. x 是否有进入目录的权限 cd4. 注意(目录权限):1. r 是否能查看目录内容ls 需要x权限配合2. w 是否能在目录中创建删除 重命名 文件权限 需要x权限配合3. .x 是否能进入到目录权限 cd 是否能修改或查看目录中文件属性 Linux文件和目录权限总结 权限拒绝排查流程]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[防火墙]]></title>
    <url>%2F2017%2F12%2F02%2Ffang%E9%98%B2%E7%81%AB%E5%A2%99%2F</url>
    <content type="text"><![CDATA[防火墙1 防火墙种类及使用说明硬件三层路由深信服Juniper 软件iptablesfirewalld 云防火墙阿里云:安全组 2 必须熟悉的名词容器: 瓶子 罐子 存放东西表(table): 存放链的容器链(chain): 存放规则的容器规则(policy): 准许或拒绝规则 Netfilter 表（tables） 链（chains） 规则（Policy） 小区 楼房 房子 家具 3 iptables 执行过程工作流程小结： 防火墙是层层过滤的，实际是按照配置规则的顺序从上到下，从前到后进行过滤的。 如果匹配上规则，即明确表示是阻止还是通过，数据包就不再向下匹配新的规则。 如果规则中没有明确表明是阻止还是通过的，也就是没有匹配规则，向下进行匹配，直到匹配默认 规则得到明确的阻止还是通过。 防火墙的默认规则是所有规则执行完才执行的。 4.表与链( 4表伍链 ) filter表 强调：主要和主机自身相关，真正负责主机防火墙功能的（过滤流入流出主机的数据包） filter表示iptables默认使用的表，这个表定义了三个链（chains） 企业工作场景：主机防火墙 INPUT 负责过滤所有目标地址是本机地址的数据包 通俗来说：就是过滤进入主机的数据包 FORWARD 负责转发流经主机的数据包。起转发的作用，和NAT关系很大，后面会详细介绍LVS NAT模式，net.ipv4.ip_forward=0 OUTPUT 处理所有源地址是本机地址的数据包 通俗的讲：就是处理从主机发出去的数据包 NAT表 负责网络地址转换的，即来源与目的IP地址和port的转换。应用：和主机本身无关，一般用于局域网共享上网或者特殊的端口转换服务相关。工作场景：1. 用于企业路由（zebra）或网关（iptables），共享上网（POSTROUTING）2. 做内部外部IP地址一对一映射（dmz），硬件防火墙映射IP到内部服务器，ftp服务（PREROUTING）3. WEB，单个端口的映射，直接映射80端口（PREROUTING） 这个表定义了3个链，nat功能相当于网络的acl控制。和网络交换机acl类似。 OUTPUT 和主机放出去的数据包有关，改变主机发出数据包的目的地址。 PREROUTING 在数据包到达防火墙时，进行路由判断之前执行的规则，作用是改变数据包的目的地址、目的端口等就是收信时，根据规则重写收件人的地址。例如：把公网IP：xxx.xxx.xxx.xxx映射到局域网的xx.xx.xx.xx服务器上。如果是web服务，可以报80转换为局域网的服务器9000端口上10.0.0.61 8080(目标端口) —-nat—à 10.0.0.7 22 POSTROUTING 在数据包离开防火墙时进行路由判断之后执行的规则，作用改变数据包的源地址，源端口等。写好发件人的地址，要让家人回信时能够有地址可回。例如。默认笔记本和虚拟机都是局域网地址，在出网的时候被路由器将源地址改为了公网地址。生产应用：局域网共享上网。 5.环境准备及命令5.1iptables iptables启动或关闭的命令123456yum install -y iptables-services[root@m01 ~]# rpm -ql iptables-services/etc/sysconfig/ip6tables/etc/sysconfig/iptables #防火墙的配置文件/usr/lib/systemd/system/ip6tables.service/usr/lib/systemd/system/iptables.service #防火墙服务配置文件(命令) 12345678防火墙相关模块 加载到内核中modprobe ip_tablesmodprobe iptable_filtermodprobe iptable_natmodprobe ip_conntrackmodprobe ip_conntrack_ftpmodprobe ip_nat_ftpmodprobe ipt_state 1234567891011[root@m01 ~]# lsmod |egrep &apos;filter|nat|ipt&apos;nf_nat_ftp 12770 0nf_conntrack_ftp 18638 1 nf_nat_ftpiptable_nat 12875 0nf_nat_ipv4 14115 1 iptable_natnf_nat 26787 2 nf_nat_ftp,nf_nat_ipv4nf_conntrack 133053 6nf_nat_ftp,nf_nat,xt_state,nf_nat_ipv4,nf_conntrack_ftp,nf_conntrack_ipv4iptable_filter 12810 0ip_tables 27126 2 iptable_filter,iptable_natlibcrc32c 12644 3 xfs,nf_nat,nf_conntrack 5.2.iptables命令参数 -L 显示表中的所有规则 -D delete 删除 -n 不要把端口 或ip反向解析为 名字 -I 追加规则到表首 insert 拒绝的规则 -t 指定表 -p 指定协议 protocal 协议 tcp/udp/icmp/all -A 追加规则到末尾 准许 ACCEPT –dport 指定目标端口 -F 清除所有规则，不会处理默认的规则 –sport 指定源端口 -X 清楚自定义链 -s –source指定IP源地址 -Z 链的计数器清零（数据包计数器与数据包字节计数器） -d –destination 指定IP目标地址 –line-num 显示表中规则行数 -j 指定动作,DROP/ACCEPT/REJECT -m 指定模块 6.配置filter表规则6.1.禁止访问22端口1iptables -t filter -A INPUT -p tcp --1 dport 22 -j DROP 删除 规则 -D 6.2.禁止网段连入（禁止10.0.0.0网段访问 8080端口）123456iptables -I INPUT -s 10.0.0.0/24 -p tcp --dport 8080 -j DROP[root@web01 ~]# ssh 10.0.0.61 hostname^C[root@web01 ~]# ssh 172.16.1.61 hostnameroot@172.16.1.61's password:m01 6.3.只允许指定网段连入（允许10.0.0.0网段）1iptables -I INPUT ! -s 10.0.0.0/1 24 -j DROP 6.4.指定多个端口12345指定多个端口加模块:[root@m01 ~]# iptables -I INPUT -p tcp -m multiport ! --dport 80,443 -jDROP指定端口范围,不用加模块:[root@m01 ~]# iptables -I INPUT -p tcp --dport 1024:65535 -j DROP 6.5匹配ICMP类型ICMP（Internet Control Message Protocol）Internet控制报文协议通过内核参数 控制 禁止被ping 12345[root@m01 ~]# cat /etc/sysctl.conf#/proc/sys/net/ipv4/icmp_echo_ignore_allnet.ipv4.icmp_echo_ignore_all = 1[root@m01 ~]# sysctl -pnet.ipv4.icmp_echo_ignore_all = 1 通过防火墙规则 控制是否可以ping 1234567891011[root@m01 ~]# iptables -I INPUT -p icmp --icmp-type 8 -j DROP[root@m01 ~]# iptables -nLChain INPUT (policy ACCEPT)target prot opt source destinationDROP icmp -- 0.0.0.0/0 0.0.0.0/0 icmptype 8Chain FORWARD (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destination 6.6 匹配网络状态（TCP/IP连接状态）1234567-m state --stateNEW：已经或将启动新的连接ESTABLISHED：已建立的连接RELATED：正在启动的新连接INVALID：非法或无法识别的iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPTiptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT 6.7 限制并发及速率123iptables -I INPUT -p icmp --icmp-type 8 -j ACCEPTiptables -I INPUT -p icmp --icmp-type 8 -m limit --limit 6/min --limit-burst5 -j ACCEPT -m limit –limit n/{second/minute/hour}:解释：指定时间内的请求速率”n”为速率，后面为时间分别为：秒 分 时–limit-burst [n]解释：在同一时间内允许通过的请求”n”为数字，不指定默认为5 6.8 防火墙规则的保存与恢复1234567891011121314151617181920212223242526272829303132333435363738394041424344454647[root@m01 ~]# cat /etc/sysconfig/iptables# sample configuration for iptables service# you can edit this manually or use system-config-firewall# please do not ask us to add additional ports/services to this defaultconfiguration*filter:INPUT ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [0:0]-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT-A INPUT -p icmp -j ACCEPT-A INPUT -i lo -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT-A INPUT -j REJECT --reject-with icmp-host-prohibited-A FORWARD -j REJECT --reject-with icmp-host-prohibitedCOMMIT[root@m01 ~]# iptables-save &gt; /etc/sysconfig/iptables[root@m01 ~]#[root@m01 ~]# cat /etc/sysconfig/iptables# Generated by iptables-save v1.4.21 on Wed Jul 24 23:28:23 2019*filter:INPUT ACCEPT [341:28194]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [271:30712]-A INPUT -p icmp -m icmp --icmp-type 8 -j DROPCOMMIT# Completed on Wed Jul 24 23:28:23 2019[root@m01 ~]# #恢复[root@m01 ~]# #重启防火墙[root@m01 ~]# iptables -F[root@m01 ~]# iptables -nLChain INPUT (policy ACCEPT)target prot opt source destinationChain FORWARD (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT) target prot opt source destination[root@m01 ~]#[root@m01 ~]# iptables-restore &lt;/etc/sysconfig/iptables[root@m01 ~]# iptables -nLChain INPUT (policy ACCEPT)target prot opt source destinationDROP icmp -- 0.0.0.0/0 0.0.0.0/0 icmptype 8Chain FORWARD (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destination 6.9 实际生产用法1.ssh可以连接进来12345678910111213141516171819[root@m01 ~]# iptables -F[root@m01 ~]# iptables -X[root@m01 ~]# iptables -Z[root@m01 ~]# iptables -nLChain INPUT (policy ACCEPT)target prot opt source destinationChain FORWARD (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destination[root@m01 ~]# iptables -A INPUT -p tcp --dport 22 -j ACCEPT[root@m01 ~]# iptables -nLChain INPUT (policy ACCEPT)target prot opt source destinationACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:22Chain FORWARD (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destination 2.设置允许本机lo通讯规则允许本机回环lo接口数据流量流出与流入 12iptables -A INPUT -i lo -j ACCEPTiptables -A OUTPUT -o lo -j ACCEPT 3.配置默认规则及 放行 80 443端口12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849[root@m01 ~]# iptables -P INPUT DROP[root@m01 ~]# iptables -P FORWARD DROP[root@m01 ~]# iptables -P OUTPUT ACCEPT[root@m01 ~]# iptables -A INPUT -m multiport -p tcp --dport 443,80 -jACCEPT[root@m01 ~]# iptables -nLChain INPUT (policy DROP)target prot opt source destinationACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:22ACCEPT all -- 0.0.0.0/0 0.0.0.0/0ACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 multiport dports 443,80Chain FORWARD (policy DROP)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destinationACCEPT all -- 0.0.0.0/0 0.0.0.0/0[root@m01 ~]# iptables -A INPUT -s 10.0.0.0/24 -j ACCEPT[root@m01 ~]# iptables -A INPUT -s 172.16.1.0/24 -j ACCEPT[root@m01 ~]#[root@m01 ~]# iptables -nLChain INPUT (policy DROP)target prot opt source destinationACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:22ACCEPT all -- 0.0.0.0/0 0.0.0.0/0ACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 multiportdports 443,80ACCEPT all -- 10.0.0.0/24 0.0.0.0/0ACCEPT all -- 172.16.1.0/24 0.0.0.0/0Chain FORWARD (policy DROP)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destinationACCEPT all -- 0.0.0.0/0 0.0.0.0/0[root@m01 ~]# iptables-save# Generated by iptables-save v1.4.21 on Wed Jul 24 23:42:00 2019*filter:INPUT DROP [0:0]:FORWARD DROP [0:0]:OUTPUT ACCEPT [24:3008]-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT-A INPUT -i lo -j ACCEPT-A INPUT -p tcp -m multiport --dports 443,80 -j ACCEPT-A INPUT -s 10.0.0.0/24 -j ACCEPT-A INPUT -s 172.16.1.0/24 -j ACCEPT-A OUTPUT -o lo -j ACCEPTCOMMIT# Completed on Wed Jul 24 23:42:00 2019 7.配置nat表规则123456789101112131415161718192021222324[root@m01 ~]# iptables -P INPUT ACCEPT[root@m01 ~]# iptables -P FORWARD ACCEPT[root@m01 ~]# iptables -nLChain INPUT (policy ACCEPT)target prot opt source destinationDROP icmp -- 0.0.0.0/0 0.0.0.0/0 icmptype 8ACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:22ACCEPT all -- 0.0.0.0/0 0.0.0.0/0ACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 multiport dports 443,80ACCEPT all -- 10.0.0.0/24 0.0.0.0/0ACCEPT all -- 172.16.1.0/24 0.0.0.0/0Chain FORWARD (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destinationACCEPT all -- 0.0.0.0/0 0.0.0.0/0[root@m01 ~]# iptables -F[root@m01 ~]# iptables -nLChain INPUT (policy ACCEPT)target prot opt source destinationChain FORWARD (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destination 7.1实现共享上网※※※※※ 1.防火墙配置123456[root@m01 ~]# iptables -t nat -A POSTROUTING -s 172.16.1.0/24 -j SNAT --to-source 10.0.0.61[root@m01 ~]# echo 'net.ipv4.ip_forward = 1' &gt;&gt; /etc/sysctl.conf[root@m01 ~]# sysctl -pnet.ipv4.icmp_echo_ignore_all = 0net.ipv4.ip_forward = 1 注意事项: 公网ip不固定: iptables -t nat -A POSTROUTING -s 172.16.1.0/24 -j MASQUERADE 2.web配置123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263[root@web01 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0TYPE=EthernetBOOTPROTO=noneNAME=eth0DEVICE=eth0ONBOOT=no #禁用eth0IPADDR=10.0.0.7PREFIX=24GATEWAY=10.0.0.254DNS1=223.5.5.5GATEWAY=10.0.0.254[root@web01 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth1TYPE=EthernetIPADDR=172.16.1.7PREFIX=24NAME=eth1DEVICE=eth1ONBOOT=yesGATEWAY=172.16.1.61 #网关改成外网机器网址DNS1=1.2.4.8[root@web01 ~]# systemctl restart network[root@m01 ~]# ssh 172.16.1.7Last login: Wed Jul 24 23:06:58 2019 from 10.0.0.1[root@web01 ~]# ip a1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN groupdefault qlen 1000link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00inet 127.0.0.1/8 scope host lovalid_lft forever preferred_lft foreverinet6 ::1/128 scope hostvalid_lft forever preferred_lft forever2: eth0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast state DOWN groupdefault qlen 1000link/ether 00:0c:29:b2:e3:7e brd ff:ff:ff:ff:ff:ff3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast stateUP group default qlen 1000link/ether 00:0c:29:b2:e3:88 brd ff:ff:ff:ff:ff:ffinet 172.16.1.7/24 brd 172.16.1.255 scope global eth1valid_lft forever preferred_lft foreverinet6 fe80::20c:29ff:feb2:e388/64 scope linkvalid_lft forever preferred_lft forever[root@web01 ~]# ping baidu.comPING baidu.com (220.181.38.148) 56(84) bytes of data.64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=1 ttl=127 time=8.90ms64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=2 ttl=127 time=7.52ms64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=3 ttl=127 time=9.28ms64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=4 ttl=127 time=9.36ms^C--- baidu.com ping statistics ---4 packets transmitted, 4 received, 0% packet loss, time 3006msrtt min/avg/max/mdev = 7.528/8.769/9.364/0.746 ms[root@web01 ~]# ping 1.2.4.8PING 1.2.4.8 (1.2.4.8) 56(84) bytes of data.64 bytes from 1.2.4.8: icmp_seq=1 ttl=127 time=76.4 ms64 bytes from 1.2.4.8: icmp_seq=2 ttl=127 time=76.8 ms^C--- 1.2.4.8 ping statistics ---2 packets transmitted, 2 received, 0% packet loss, time 1002msrtt min/avg/max/mdev = 76.440/76.637/76.834/0.197 ms 3.完成后 在web01 发出 ip r和ping 外网ip的结果12345678910111213141516171819202122[root@web01 ~]# ip rdefault via 172.16.1.61 dev eth1169.254.0.0/16 dev eth1 scope link metric 1003172.16.1.0/24 dev eth1 proto kernel scope link src 172.16.1.7[root@web01 ~]# route -nKernel IP routing tableDestination Gateway Genmask Flags Metric Ref UseIface0.0.0.0 172.16.1.61 0.0.0.0 UG 0 0 0eth1169.254.0.0 0.0.0.0 255.255.0.0 U 1003 0 0eth1172.16.1.0 0.0.0.0 255.255.255.0 U 0 0 0eth1[root@web01 ~]# ping baidu.comPING baidu.com (39.156.69.79) 56(84) bytes of data.64 bytes from 39.156.69.79 (39.156.69.79): icmp_seq=1 ttl=127 time=21.7 ms64 bytes from 39.156.69.79 (39.156.69.79): icmp_seq=2 ttl=127 time=32.6 ms^C--- baidu.com ping statistics ---2 packets transmitted, 2 received, 0% packet loss, time 1002msrtt min/avg/max/mdev = 21.781/27.214/32.647/5.433 ms 7.2.实现端口转发※※※※※ 1234567891011121314[root@m01 ~]# iptables -t nat -A PREROUTING -d 10.0.0.61 -p tcp --dport9000 -j DNAT --to-destination 172.16.1.7:22[root@m01 ~]# iptables -nL -t natChain PREROUTING (policy ACCEPT)target prot opt source destinationDNAT tcp -- 0.0.0.0/0 10.0.0.61 tcp dpt:9000to:172.16.1.7:22Chain INPUT (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destinationChain POSTROUTING (policy ACCEPT)target prot opt source destinationSNAT all -- 172.16.1.0/24 0.0.0.0/0 to:10.0.0.61 测试与检查本地shell中 [d:~]$ ssh 1 root@10.0.0.61 9000 7.3实现ip映射12345678910111213141516ip a add 10.0.0.62/24 dev eth0 label eth0:0[root@m01 ~]# iptables -t nat -A PREROUTING -d 10.0.0.62 -j DNAT --todestination172.16.1.7[root@m01 ~]# iptables -nL -t natChain PREROUTING (policy ACCEPT)target prot opt source destinationDNAT tcp -- 0.0.0.0/0 10.0.0.61 tcp dpt:9000to:172.16.1.7:22DNAT all -- 0.0.0.0/0 10.0.0.62 to:172.16.1.7Chain INPUT (policy ACCEPT)target prot opt source destinationChain OUTPUT (policy ACCEPT)target prot opt source destinationChain POSTROUTING (policy ACCEPT)target prot opt source destinationSNAT all -- 172.16.1.0/24 0.0.0.0/0 to:10.0.0.61 练习题:5、请写出查看iptables当前所有规则的命令。iptables-saveiptables -nLiptables -nL -t nat 6、禁止来自10.0.0.188 ip地址访问80端口的请求 iptables -I INPUT -s 10.0.0.188 -p tcp –dport 1 80 -j DROP 7、如何使在命令行执行的iptables规则永久生效？ iptables-save/etc/sysconfig/iptables 8、实现把访问10.0.0.3:80的请求转到172.16.1.17:80 iptables -t nat -A PREROUTING -d 10.0.0.3 -p tcp –dport 80 -j DNAT–to-destination 172.16.xxxx:80 9、实现172.16.1.0/24段所有主机通过124.32.54.26外网IP共享上网。 iptables -t nat -A POSTROUTING -s 172.16.1.0/24 -j SNAT –tosource123.32.54.26iptables -t nat -A POSTROUTING -s 172.16.1.0/24 -j SNAT MASQUERADE 补充资料:面试题:让1个服务开机自启动 有什么方法 https://www.jianshu.com/p/fc26d73fe050【不会别做运维了】CentOS 6 VS 7 区别 https://www.jianshu.com/p/d6d9a49e95c9 总结练习题:【面试题】老男孩教育防火墙企业面试题iptalbeshttps://www.jianshu.com/p/19422676b854防火墙 笔试题 www.jianshu.com/p/2180face8381]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>防火墙</tag>
      </tags>
  </entry>
</search>
